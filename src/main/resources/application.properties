server.port=8080
server.servlet.context-path=/check

auth.account=admin
auth.password=admin

kafka.consumer.zookeeper.connect=192.168.20.214:2181
kafka.consumer.servers=192.168.20.214:19092
kafka.consumer.group.id=g1
kafka.consumer.enable.auto.commit=true
kafka.consumer.auto.commit.interval=1000
kafka.consumer.topic=test
kafka.consumer.session.timeout=6000
kafka.consumer.auto.offset.reset=latest
kafka.consumer.concurrency=10

#spring.kafka.consumer.group-id=test-consumer-group

#============== kafka ===================
## 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=192.168.153.135:9092
#
##=============== provider  =======================
#
#spring.kafka.producer.retries=0
## 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
#
## 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
##=============== consumer  =======================
## 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group
#
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
#
## 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.bootstrap-servers=192.168.20.214:9092
spring.kafka.consumer.group-id=test